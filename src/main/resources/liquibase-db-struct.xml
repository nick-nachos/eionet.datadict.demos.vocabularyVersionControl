<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog 
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
    
    <changeSet id="rev-1" author="nakasnik">
        
        <sql endDelimiter=";" splitStatements="true" stripComments="true">
            create table Vocabulary (
                    Id bigint auto_increment,
                    Identifier varchar(100) not null,
                    Label varchar(255) not null,
                    BaseUri varchar(255) not null,
                    RegulationStatus tinyint not null,
                    -- more data columns here
                    WorkItemId bigint,
                    primary key(Id)
            );

            create table Concept (
                    Id bigint auto_increment,
                    Identifier varchar(100) not null,
                    Notation varchar(100),
                    Label varchar(1000) not null,
                    Definition text,
                    Status int,
                    -- more data columns here
                    WorkItemId bigint,
                    primary key(Id)
            );

            create table VocabularyConcepts (
                    Id bigint auto_increment,
                    fVocabularyId bigint not null,
                    fConceptId bigint not null,
                    primary key(Id),
                    unique(fVocabularyId, fConceptId),
                    foreign key(fVocabularyId) references Vocabulary(Id),
                    foreign key(fConceptId) references Concept(Id)
            );

            create table ConceptAttribute (
                    Id bigint auto_increment,
                    Identifier varchar(100),
                    DataType tinyint,
                    -- more data columns here
                    WorkItemId bigint,
                    primary key(Id)
            );

            create table ConceptAttributeValue (
                    Id bigint auto_increment,
                    `Language` varchar(10),
                    `Value` Text,
                    fRelatedVocabularyConceptId bigint,
                    -- more data columns here
                    WorkItemId bigint,
                    primary key(Id),
                    foreign key(fRelatedVocabularyConceptId) references VocabularyConcepts(Id)
            );

            create table VocabularyConceptAttributes (
                    Id bigint auto_increment,
                    fVocabularyId bigint not null,
                    fConceptAttributeId bigint not null,
                    primary key(Id),
                    unique(fVocabularyId, fConceptAttributeId),
                    foreign key(fVocabularyId) references Vocabulary(Id),
                    foreign key(fConceptAttributeId) references ConceptAttribute(Id)
            );

            create table VocabularyConceptAttributeValues (
                    Id bigint auto_increment,
                    fVocabularyConceptAttributeId bigint not null,
                    fVocabularyConceptId bigint not null,
                    fConceptAttributeValueId bigint not null,
                    primary key(Id),
                    unique(fVocabularyConceptAttributeId, fVocabularyConceptId, fConceptAttributeValueId),
                    foreign key(fVocabularyConceptAttributeId) references VocabularyConceptAttributes(Id),
                    foreign key(fVocabularyConceptId) references VocabularyConcepts(Id),
                    foreign key(fConceptAttributeValueId) references ConceptAttributeValue(Id)
            );

            create table VocabularyVersion (
                    Id bigint auto_increment,
                    fEntityId bigint not null,
                    fRootVersionId bigInt,
                    fParentVersionId bigint,
                    UserName varchar(100) not null,
                    CommitDate bigint not null,
                    primary key(Id),
                    foreign key(fEntityId) references Vocabulary(Id),
                    foreign key(fParentVersionId) references VocabularyVersion(Id),
                    foreign key(fParentVersionId) references VocabularyVersion(Id)
            );

            create table ConceptAttributeVersion (
                    Id bigint auto_increment,
                    fEntityId bigint not null,
                    fRootVersionId bigInt,
                    fParentVersionId bigint,
                    UserName varchar(100) not null,
                    CommitDate bigint not null,
                    primary key(Id),
                    foreign key(fEntityId) references ConceptAttribute(Id),
                    foreign key(fParentVersionId) references ConceptAttributeVersion(Id),
                    foreign key(fParentVersionId) references ConceptAttributeVersion(Id)
            );

            create table Revision (
                    Id bigint auto_increment,
                    CreationDate bigint not null,
                    UserName varchar(100) not null,
                    fParentRevisionId bigint,
                    primary key(Id),
                    foreign key(fParentRevisionId) references Revision(Id)
            );

            create table RevisionVocabularyVersions (
                    fRevisionId bigint,
                    fVocabularyVersionId bigint,
                    primary key(fRevisionId, fVocabularyVersionId),
                    foreign key(fRevisionId) references Revision(Id),
                    foreign key(fVocabularyVersionId) references VocabularyVersion(Id)
            );

            create table RevisionConceptAttributeVersions (
                    fRevisionId bigint,
                    fConceptAttributeVersionId bigint,
                    primary key(fRevisionId, fConceptAttributeVersionId),
                    foreign key(fRevisionId) references Revision(Id),
                    foreign key(fConceptAttributeVersionId) references ConceptAttributeVersion(Id)
            );

            create table WorkSet (
                    Id bigint auto_increment,
                    UserName varchar(100) not null,
                    -- more data columns here
                    primary key(Id)
            );

            create table WorkSetVocabulary (
                    Id bigint auto_increment,
                    fWorkSetId bigint not null,
                    WorkActionType tinyint not null, -- (add / edit / delete)
                    fVocabularyId bigint,
                    primary key(Id),
                    foreign key(fWorkSetId) references WorkSet(Id),
                    foreign key(fVocabularyId) references Vocabulary(Id)
            );

            create table WorkSetVocabularyData ( -- in case of (add / edit)
                    fWorkSetVocabularyId bigint,
                    Identifier varchar(100),
                    -- more data columns here
                    primary key(fWorkSetVocabularyId),
                    foreign key(fWorkSetVocabularyId) references WorkSetVocabulary(Id)
            );

            create table WorkSetVocabularyConcept (
                    Id bigint auto_increment,
                    fWorkSetVocabularyId bigint not null,
                    WorkActionType tinyint not null, -- (add / edit / delete)
                    fConceptId bigint,
                    primary key(Id),
                    foreign key(fWorkSetVocabularyId) references WorkSetVocabulary(Id),
                    foreign key(fConceptId) references Concept(Id)
            );

            create table WorkSetVocabularyConceptData ( -- in case of (add / edit)
                    fWorkSetVocabularyConceptId bigint,
                    Identifier varchar(100),
                    -- more data columns here
                    primary key(fWorkSetVocabularyConceptId),
                    foreign key(fWorkSetVocabularyConceptId) references WorkSetVocabularyConcept(Id)
            );

            create table WorkSetConceptAttribute (
                    Id bigint auto_increment,
                    fWorkSetId bigint not null,
                    WorkActionType tinyint not null, -- (add / edit / delete / reference)
                    fConceptAttributeId bigint,
                    primary key(Id),
                    foreign key(fWorkSetId) references WorkSet(Id),
                    foreign key(fConceptAttributeId) references ConceptAttribute(Id)
            );

            create table WorkSetConceptAttributeData ( -- in case of (add / edit)
                    fWorkSetConceptAttributeId bigint,
                    Identifier varchar(100),
                    DataType varchar(100),
                    -- more data columns here
                    primary key(fWorkSetConceptAttributeId),
                    foreign key(fWorkSetConceptAttributeId) references WorkSetConceptAttribute(Id)
            );

            create table WorkSetVocabularyConceptAttribute (
                    Id bigint auto_increment,
                    fWorkSetVocabularyId bigint not null,
                    fWorkSetConceptAttributeId bigint not null,
                    WorkActionType tinyint not null,
                    primary key(Id),
                    foreign key(fWorkSetVocabularyId) references WorkSetVocabulary(Id),
                    foreign key(fWorkSetConceptAttributeId) references WorkSetConceptAttribute(Id)
            );

            create table WorkSetVocabularyConceptAttributeValue (
                    Id bigint auto_increment,
                    fWorkSetVocabularyConceptId bigint not null,
                    fWorkSetVocabularyConceptAttributeId bigint not null,
                    WorkActionType tinyint not null, -- (add / edit / delete),
                    fConceptAttributeValueId bigint,
                    primary key(Id),
                    foreign key(fWorkSetVocabularyConceptId) references WorkSetVocabularyConcept(Id),
                    foreign key(fWorkSetVocabularyConceptAttributeId) references WorkSetVocabularyConceptAttribute(Id),
                    foreign key(fConceptAttributeValueId) references ConceptAttributeValue(Id)
            );

            create table WorkSetVocabularyConceptAttributeValueData (
                    fWorkSetVocabularyConceptAttributeValueId bigint,
                    `Language` varchar(10),
                    `Value` varchar(1000),
                    -- more data columns here
                    primary key(fWorkSetVocabularyConceptAttributeValueId),
                    foreign key(fWorkSetVocabularyConceptAttributeValueId) references WorkSetVocabularyConceptAttributeValue(Id)
            );
        </sql>
        
        <modifySql dbms="mysql">
            <append value=" ENGINE = InnoDB DEFAULT CHARSET = utf8"/>
        </modifySql>
    </changeSet>
    
    <changeSet id="rev-2" author="nakasnik">
        <createIndex tableName="Revision" indexName="CreationDate">
            <column name="CreationDate" />                                       
        </createIndex>
        
        <createIndex tableName="VocabularyVersion" indexName="CommitDate">
            <column name="CommitDate" />                                       
        </createIndex>
        <createIndex tableName="ConceptAttributeVersion" indexName="CommitDate">
            <column name="CommitDate" />                                       
        </createIndex>
        
        <createIndex tableName="Vocabulary" indexName="Identifier">
            <column name="Identifier" />                                       
        </createIndex>
        <createIndex tableName="Vocabulary" indexName="WorkItemId">
            <column name="WorkItemId" />                                       
        </createIndex>
        
        <createIndex tableName="Concept" indexName="Identifier">
            <column name="Identifier" />                                       
        </createIndex>
        <createIndex tableName="Concept" indexName="WorkItemId">
            <column name="WorkItemId" />                                       
        </createIndex>
        
        <createIndex tableName="ConceptAttribute" indexName="DataType">
            <column name="DataType" />                                       
        </createIndex>
        <createIndex tableName="ConceptAttribute" indexName="WorkItemId">
            <column name="WorkItemId" />                                       
        </createIndex>
        
        <createIndex tableName="ConceptAttributeValue" indexName="WorkItemId">
            <column name="WorkItemId" />                                       
        </createIndex>
        
        
    </changeSet>
    
</databaseChangeLog>